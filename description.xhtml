<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <link rel="stylesheet" type="text/css" href="css/style.css"/>
        <link href="https://fonts.googleapis.com/css?family=Assistant" rel="stylesheet"/>
        <title>Digital Humanities</title>
    </head>
    <body>
        <nav>
            <a href="index.xhtml">Home</a>
            <a href="syllabus.xhtml">Syllabus</a>
            <a href="projects.xhtml">Projects</a>
            <!-- <a href="assignments.xhtml">Assignments</a> -->
            <a href="http://dh.obdurodon.org/">Resources</a>
            <a href="https://bactriana.org">Bactriana</a>
        </nav>
        <h1>Computational Methods in the Humanities</h1>

        <h2>Course Description</h2>

        <h3>Content Overview</h3>

        <p>Computational Methods in the Humanities is one of the very few courses offered at the University of Pittsburgh that is designed specifically to address the knowledge and skills involved in quantitative and formal reasoning within the context of the interests and needs of students in the humanities. To this end, it combines lecture, discussion, and practical programming exercises.</p> 
        <p>There are no prerequisites. In particular, students are not expected to have any prior computer programming experience and they are not required to know any foreign languages.</p>
        <p>This course will introduce students to the role that computational methods can play in primary research and scholarship in the humanities, using as a framework eXtensible Markup Language (XML) and related technologies. XML has excellent properties for document modeling, which makes it singularly useful for humanities computing, and it is not an accident that many Digital Humanities projects today are built around XML and related technologies. The related technologies addressed in the course include a powerful declarative programming language (XSLT), a formal model for the navigation of XML documents (XPath) used by XSLT, a metalanguage for the formal modeling of documents (Relax NG), a constraint modeling language (ISO Schematron), a graphic description language (SVG), and others.</p>
        <p>Upon successful completion of this course students will be able to 1) identify opportunities for the application of computer technology to authentic research problems in the humanities; 2) analyze the structure of texts in the humanities and develop formal representations of those structures; 3) write original computer programs, using languages in broad use in the Digital Humanities and document processing communities, to conduct research on those texts; and 4) operate comfortably with industry-standard development resources for code development, project management, and discussion.</p>

        
    

        

        <p>An Honors course provides a research-oriented, graduate-level educational opportunity, and students who complete this course have frequently commented that it was simultaneously one of the most demanding and one of the most rewarding experiences of their academic careers. That experience requires a commitment, appropriate for an Honors course, to attend all course meetings and complete all homework conscientiously and in a timely fashion. Given that commitment on your part, the instructors will be eager to work with you to help you finish the course having acquired skills that will enable you to use computational methods to conduct professional-level original research in the humanities.</p>

        <h3>Required Texts and Materials</h3>
        <p>Students are required to have a laptop (not a tablet) in order to access coding
            software at home and/or during project meetings. Pitt IT offers <a
                href="https://www.technology.pitt.edu/remotedevices">Chromebooks</a> for
            students to borrow for free. Students can access Windows-based software on
            University Chromebooks and desktop machines in computing labs through the <a
                href="https://www.technology.pitt.edu/services/virtual-lab">Virtual
                Computing Lab.</a></p>
        <p>The principal (and required) textbook is Michael Kay, <cite>XSLT 2.0 and XPath
                2.0 programmer’s reference,</cite> 4th edition, Indianapolis: Wiley/Wrox,
            2008, ISBN-10: 0470192747. ISBN-13: 978-0470192740. Earlier editions are not
            acceptable. This book is available from <a
                href="https://www.amazon.com/XSLT-2-0-XPath-Programmers-Reference/dp/0470192747/"
                >Amazon</a> (do not buy the Kindle edition, which is difficult to use
            because of poor indexing) and other on-line vendors. A digital copy (PDF format)
            is accessible through the <a
                href="http://site.ebrary.com/lib/pitt/detail.action?docID=10381092">Pitt
                library system</a>. Other required materials, a list of which will be
            distributed by the instructor for each topic, are available at no cost on the
            Internet. All of these materials, including the Kay book, are intended primarily
            for reference, which is to say that students should anticipate using them
            frequently and intensively to research solutions to particular problems, but
            they are not expected to read them cover to cover.</p>
        <p>This course will use the &lt;oXygen/&gt; XML Editor and IDE (integrated
            development environment), which is available in all CSSD computing labs
            (including the <a href="https://www.technology.pitt.edu/services/virtual-lab"
                >Virtual Computing Lab</a>) through a site license purchased by the
            University. The site license also permits students enrolled in this course (and
            only those students) to install a copy of the software on their personal
            computers (Windows, Mac, and Linux) for use at home (for course-related purposes
            only). The software can be downloaded from <a href="https://www.oxygenxml.com"
                >https://www.oxygenxml.com</a> and the license code to register your home
            copy is available as an announcement inside Canvas. We will notify you about
            other course software (all free) as the need arises.</p>

        <h3><a href="projects.xhtml">Projects</a></h3>
        <p>The centerpiece of this course, and single most important grade, are student-driven, team research projects. Students are at liberty to select any topic of interest to them, so long as (a) it has research value within what we broadly consider "the humanities", and (b) the project takes advantage of many of the digital methods covered in this course. For additional guidelines, and examples of past projects, see<a href="projects.xhtml"> this webpage</a>.</p>

        <h3>Assignments</h3>

        <p>In addition to project tasks, course activities include reading, coding, and
            response paper assignments, as well as participation in formal and informal
            online discussion. Students must complete at least 90% of each homework
            component (programming assignments, response papers, project tasks,
            participation in online activities) on time in order to pass the course. For
            students who meet the 90% requirement, these assignments, taken together, are
            worth 25% of the course grade.</p>
        <p>Students will need to observe file-naming conventions for all uploaded homework
            and project files. These conventions are explained at <a
                href="http://dh.obdurodon.org/file-naming_conventions.xhtml"
                >http://dh.obdurodon.org/file-naming_conventions.xhtml</a> (also linked from
            the <a href="http://dh.obdurodon.org">main course page</a>); please ask the
            instructors if anything is unclear.</p>

        <h4>Coding Tasks</h4>

        <p>Coding assignments in this course are a technique for learning and studying,
            and not—as in many other courses—a way of testing whether you’ve already
            learned something covered in class or in an assigned reading. Because a
            crucial skill in Digital Humanities development is the ability to look up
            how to do something you don’t already know how to do, these assignments will
            frequently challenge you to write code that you do not yet know how to
            write. Students who are used to the homework-as-test model of course design
            may find this disconcerting (<q>But they haven’t told us how to do
            this!</q>), but professional developers have to look things up all the time,
            and learning how to look things up is a critical pedagogical goal of this
            course. There may be times when you don’t get the result you want, and in
            those cases you can still get full credit for the assignment if you’ve made
            a serious attempt and if you submit, along with your code, a description of
            what you tried, the results you expected, the results you got, and what you
            think went wrong. Getting stuck is part of the learning process and the
            instructors will be happy to help unstick you as long as you’ve described
            your understanding of the problem and your attempts to resolve it on your
            own. To help you develop the habit of carefully reading, and then
            explaining, your code, <em>you must submit at least one relevant, thoughtful
                comment with each coding assignment.</em>
            <strong>Note</strong>: When submitting commentary with your homework
            assignment, refrain from using any Canvas-specific commenting feature;
            instead, you should write your message directly in your homework file as a
            formal comment (we’ll show you how). This is the only way to guarantee that
            the instructors will be able to see it.</p>
        <p>The instructors will post solutions to and discussion of programming
            assignments on Obdurodon after the assignment deadline. The instructors will
            read and evaluate all student homework, and will post an assessment on
            Canvas, and we will write back to you with individual comments only if your
            specific submission raises an issue that we don’t address in our general
            posted solution. If we don’t return your assignment, that means that we have
            nothing to add to our posted solution, which you nonetheless need to read,
            and should you have any specific questions after you’ve done that, please
            ask the instructors. Coding assignments are assessed as <q>check plus</q>,
                <q>check</q>, and <q>check minus</q>. Don’t think of these as grades,
            since they all receive full credit; they are feedback, for learning
            purposes, about how well you engaged with the assignment. If you have not
            engaged with the assignment adequately (whether that means solving the tasks
            or discussing the coding impediments you encountered and how you dealt with
            them), we will ask you to meet with us to review the issues and then
            complete a followup (redo) task in order to receive credit. Submissions that
            are blank, inappropriately short, or otherwise not reflective of reasonable
            time or effort being spent on the assignment will be marked as <q>not
                submitted</q>. Because we post solutions to coding assignments and
            review them in class and because homework assignments are sequenced, and
            therefore time-sensitive, we cannot accept late homework submissions.</p>


        
        <h4>Response Papers</h4>
        <p>Students will be asked to submit 300- to 400-word response papers to readings
            or as evaluations of Digital Humanities web sites, projects, and resources.
            Your response does not have to be long, but it must show a thoughtful
            intellectual engagement with the material. For example, don’t summarize an
            article (which you could do just by skimming or reading the first paragraph)
            and don’t just praise or condemn a web site without going into specifics
            about why some component is or is not well designed and suggesting specific
            ways it could be improved. Good response papers show thought and attention,
            and may respond to a reading or site in general, or to a detail of specific
            interest. Some sites are significant for their design and user experience,
            others for their research methodology, and response papers should engage
            with the aspects that are most significant to the project. In some cases the
            syllabus will specify the focus of the response papers for a particular
            assignment. Response papers are also assessed as <q>check plus</q>,
                <q>check</q>, and <q>check minus</q>, all of which earn full credit, and
            your instructors will return them with individualized feedback.</p>

        <h4><a href="standing-assignments.xhtml">Standing Assignments</a></h4>
        <p>Each week and month will follow a predictable rythym: on Wednesday a general <em>discussion forum</em> post is due (for sharing ideas and trouble-shooting); a <em>project update</em> must be posted by Friday; and then one Monday per month each student will post a comment on another team's project. All of these assignments will be submitted via TopHat. (See <a href="standing-assignments.xhtml">this page</a> for more details.)</p>
        

        <h3>Examinations</h3>
        <p>There are seven coding tests, of which only the best five are incorporated into the course grade (15%). There are no make-up tests; if you miss a test, it is effectively excused, since it just becomes one of the two that don’t count.</p>
        <p>All test are assigned over a weekend. They will be open-book/open-notes, but they must be completed individually, which means that although you can look things up (and you are encouraged to do so, as needed, much as professional developers do), you are not permitted to request or receive help from any other persons. If you are confused or uncertain about anything on any of the tests, post an inquiry in Slack, which your instructors monitor regularly, and we’ll respond there.</p>
        <p>There is one midterm evaluation (take-home; 10%), which is collaborative and project-related. There is no final examination.</p>


        <h3>Enrollment Information</h3>
        <p>
          <ul>
              <li>General education requirement: Quantitative and formal
                reasoning</li>
            <li>Cross-listings:
                <ul>
                    <!-- Updated for 2234 by djb 2021-12-21 -->
                    <li>CLASS 1050-1050 (16898)</li>
                    <li>ENGLIT 1600-1060 (24787)</li>
                    <li>GER 1550-1060 (16897)</li>
                    <li>HIST 1030-1060 (17118)</li>
                    <li>INFSCI 0013-1050 (23950)</li>
                    <li>RELGST 1780-1060 (16895)</li>
                    <li>SLAV 1050-1060 (16993)</li>
                    <li>SLAV 2050-1210 (32325)</li>
                </ul></li>
          </ul>
        </p>
        <p>Students may enroll under any of the cross-listed rubrics and both undergraduate and graduate students are welcome (graduate students should enroll in Slav 2050, which is  the same course, but the 2000 number means that graduate students will earn graduate credit). Whether the course satisfies requirements for a departmental major is up to the individual departments, and interested students should inquire about this with their major advisors. The course carries a University Honors College (UHC) designation; for information about enrolling in UHC courses, see https://www.frederickhonors.pitt.edu/academics/courses.</p>
        <!-- <p>Letter grade (LG) or satisfactory/no-credit (S/NC). In accord with Dietrich School policy, students enrolled on an S/NC basis must earn at least a straight C to receive credit. G grades (incompletes) are given at the instructor's discretion and only in conformity with the requirements described in the Undergraduate Student Handbook at https://catalog.upp.pitt.edu/content.php?catoid=72&navoid=6226#grading-systems.
        </p> -->
    </body>
</html>
